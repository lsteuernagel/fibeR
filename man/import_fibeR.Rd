% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main_functions.R
\name{import_fibeR}
\alias{import_fibeR}
\title{Import fiber photometry data into R via Matlab}
\usage{
import_fibeR(
  input_path,
  sample_id = NULL,
  id_infererence = "pathname",
  outputpath = tempdir(),
  matlab_path = "/beegfs/bin/matlab_2014b",
  export_full = FALSE,
  downsample_freq = 1000,
  channel_names = c("x465A", "x405A"),
  verbose = TRUE
)
}
\arguments{
\item{input_path}{The full path to the binary files from TDT.}

\item{sample_id}{The id that will be used. Defaults to NULL which will use the name of the .Tbk file in the specified 'path'}

\item{id_infererence}{Only used if sample_id is NULL. Then 'pathname' will use the lowest level of path as id (default). 'tbkfile' will use the name of the tbk file in path as id. Anything else will assign a random number as id.}

\item{outputpath}{Where to store the data. Defaults to temp dir of session}

\item{matlab_path}{The Matlab installaition on your system ! Defaults to the MPI beegfs one.}

\item{export_full}{Defaults to FALSE: Will downsample in matlab by taking the mean over downsample_freq data points. If TRUE: export every data point. This is much slower, because a much bigger files has to be written to disk from Matlab.}

\item{downsample_freq}{downsample in matlab by taking the mean over downsample_freq data points}

\item{channel_names}{the channel names in the TDT binary files (required by Matlab function). Default to "x465A","x405A"}

\item{verbose}{whether to print messages}
}
\value{
the imported data of the sample
}
\description{
Runs Matlab functions to export either all or downsampled data from the binary TDT files.
This is a wrapper function that calls export_tdt and export_Notes to export TDT binary files to .txt flat files and then imports these results to R.
The intermediary exports are saved to a tempdir (cached for the session, so that when re-reading Matlab has not to be called twice). If you want to export them permanently, specify an existing directory in outputpath.
TODO: If you have previously processed data with fibeR and saved the results you can alternatively use the function load_fibeR to skip Matlab export/import.
}
