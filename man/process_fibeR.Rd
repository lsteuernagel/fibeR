% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main_functions.R
\name{process_fibeR}
\alias{process_fibeR}
\title{Process a fibeR sample}
\usage{
process_fibeR(
  fibeR_input,
  name_signal = "x465A",
  name_control = "x405A",
  downsample_data = FALSE,
  downsample_k = 1000,
  verbose = TRUE,
  cutoff_start = 10,
  cutoff_end = 5,
  start_note = 2,
  intervention_second_fallback = 600,
  reduce_for_comparability = FALSE,
  remove_intervals = FALSE,
  dff_method = c("decay", "median", "fit"),
  correct_with_control = TRUE,
  pct_fallback = 0.3,
  b_val = 10
)
}
\arguments{
\item{fibeR_input}{matrix or dataframe OR a list. If list has to have the standard fibeR format}

\item{name_signal}{character string with the name of the signal column in fibeR_input. Defaults to the MPI standard: 'x465A'}

\item{name_control}{character string with the name of the control column in fibeR_input. Defaults to the MPI standard: 'x405A'}

\item{downsample_data}{boolean: Whether to downsample data. Defaults to FALSE, because in most cases the raw.data should already be downsampled in Matlab. If FALSE but data longer than 1M rows, will bet set to TRUE.}

\item{downsample_k}{how many points to downsample. 1000 roughly gives a data point per second (for standard MPI data)}

\item{verbose}{boolean.: return messages}

\item{cutoff_start}{how many seconds to cut off at start}

\item{cutoff_end}{how many seconds to cut off at end}

\item{start_note}{which note gives the timepoint of intervention. Either a integer index or a character giving the exact note text. This is important to determine when the intervention happened ! Defaults to 2 (1 being the automatic start node from tdt).}

\item{intervention_second_fallback}{a fallback if not start_node can be found: Use this many seconds as baseline. Defaults to 10 minutes (600 seconds)}

\item{reduce_for_comparability}{boolean (Default: TRUE): the relative timeline in the processed data is rounded to full seconds. If two downsampled data points fall into the same second, this removes one of them, which allows for esier alignment with other data.}

\item{remove_intervals}{boolean (Default: FALSE): Tries to remove longer intervals where the laser was off and adjust the relative timeline by also cutting out this time}

\item{dff_method}{vector of character strings: which method to use for dFF calculation. Supports three strings at the moment: "median","fit", "decay". Can provide any or all of them.}

\item{correct_with_control}{boolean (Default: TRUE): for median and decay: Subtract control to correct for motion artifcats}

\item{pct_fallback}{when the model fitting fails the data is restricted to the maximum within in the first pct_fallback \% (e.20\%) and the minimum in the last 20\%}

\item{b_val}{manually defined starting value for formula: y ~ a*(1-(1-b)*(x/c))^(1/(1-b))}
}
\value{
Downsampled matrix with the first column being the time index and other columns being downsampled signals
}
\description{
Make sure start_note it set correct!
Pre-processes the data and then estimates dFF using a baseline calculate on the data until intervention. If you want to calculate on all data provide start_note = "stop" .
}
\details{
Details on dFF:
dFF = (signal - signalBase) / signalBase
Currently there are three approaches:

median: Take the median of the baseline and use as signalBase

fit: Apply linear fit with lm according to Lerner et al. This approach ignores the intervention time point.

decay: Fit a negative exponential decay to estimate baseline and then use the extrapolated data as signalBase. If model fit fails it falls back to median.
}
